import { withLeadingSlash } from "ufo";
import { defineNitroPlugin } from "nitropack/runtime";
import { useSitemapRuntimeConfig } from "../utils.js";
export default defineNitroPlugin((nitroApp) => {
  const { sitemaps } = useSitemapRuntimeConfig();
  const queue = [];
  const timeoutIds = [];
  const sitemapsWithRoutes = Object.entries(sitemaps).filter(([, sitemap]) => sitemap._route);
  for (const [, sitemap] of sitemapsWithRoutes)
    queue.push(() => nitroApp.localFetch(withLeadingSlash(sitemap._route), {}));
  const initialTimeout = setTimeout(
    () => {
      const next = async () => {
        if (queue.length === 0) {
          timeoutIds.length = 0;
          return;
        }
        try {
          await queue.shift()();
        } catch (error) {
          console.error("[sitemap:warm-up] Error warming up sitemap:", error);
        }
        if (queue.length > 0) {
          const nextTimeout = setTimeout(next, 1e3);
          timeoutIds.push(nextTimeout);
        }
      };
      next();
    },
    2500
    /* https://github.com/unjs/nitro/pull/1906 */
  );
  timeoutIds.push(initialTimeout);
  nitroApp.hooks.hook("close", () => {
    timeoutIds.forEach((id) => clearTimeout(id));
    timeoutIds.length = 0;
    queue.length = 0;
  });
});
