import type { FilterInput } from './types.js';
export declare const logger: import("consola").ConsolaInstance;
export declare function mergeOnKey<T, K extends keyof T>(arr: T[], key: K): T[];
export declare function splitForLocales(path: string, locales: string[]): [string | null, string];
/**
 * Transform a literal notation string regex to RegExp
 */
export declare function normalizeRuntimeFilters(input?: FilterInput[]): (RegExp | string)[];
export interface CreateFilterOptions {
    include?: (FilterInput | string | RegExp)[];
    exclude?: (FilterInput | string | RegExp)[];
}
export declare function createPathFilter(options?: CreateFilterOptions): (loc: string) => boolean;
export declare function createFilter(options?: CreateFilterOptions): (path: string) => boolean;
